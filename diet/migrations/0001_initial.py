# Generated by Django 5.1.7 on 2025-10-16 07:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='食物名称')),
                ('category', models.CharField(max_length=50, verbose_name='食物分类')),
                ('calories', models.FloatField(verbose_name='热量(kcal/100g)')),
                ('protein', models.FloatField(default=0, verbose_name='蛋白质(g/100g)')),
                ('carbohydrates', models.FloatField(default=0, verbose_name='碳水化合物(g/100g)')),
                ('fat', models.FloatField(default=0, verbose_name='脂肪(g/100g)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '食物信息',
                'verbose_name_plural': '食物信息',
            },
        ),
        migrations.CreateModel(
            name='MealRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', '早餐'), ('lunch', '午餐'), ('dinner', '晚餐')], max_length=20, verbose_name='餐次类型')),
                ('meal_date', models.DateField(db_index=True, verbose_name='就餐日期')),
                ('total_calories', models.FloatField(default=0, verbose_name='总热量(kcal)')),
                ('total_protein', models.FloatField(default=0, verbose_name='总蛋白质(g)')),
                ('total_carbs', models.FloatField(default=0, verbose_name='总碳水化合物(g)')),
                ('total_fat', models.FloatField(default=0, verbose_name='总脂肪(g)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_records', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '餐次记录',
                'verbose_name_plural': '餐次记录',
                'ordering': ['-meal_date', 'meal_type'],
            },
        ),
        migrations.CreateModel(
            name='MealFoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='重量(g)')),
                ('calories', models.FloatField(verbose_name='热量(kcal)')),
                ('protein', models.FloatField(default=0, verbose_name='蛋白质(g)')),
                ('carbohydrates', models.FloatField(default=0, verbose_name='碳水化合物(g)')),
                ('fat', models.FloatField(default=0, verbose_name='脂肪(g)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diet.fooditem', verbose_name='食物信息')),
                ('meal_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_items', to='diet.mealrecord', verbose_name='所属餐次')),
            ],
            options={
                'verbose_name': '餐次食物项',
                'verbose_name_plural': '餐次食物项',
            },
        ),
        migrations.AddIndex(
            model_name='mealrecord',
            index=models.Index(fields=['user', 'meal_date'], name='diet_mealre_user_id_886b27_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mealrecord',
            unique_together={('user', 'meal_date', 'meal_type')},
        ),
    ]
